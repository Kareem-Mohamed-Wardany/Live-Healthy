@startuml
title Create Request
actor       Patient       as User
boundary    PatientPage  as PatientPage
control     SystemHandler     as SystemHandler
entity      Patient as Patient
entity      ResNetModel as Model
entity      Database as db



User -> PatientPage : Chat with our Doctor
PatientPage -> SystemHandler: Load Chat with our Doctor Frame
SystemHandler ->  Patient: checkRequest()
Patient --> SystemHandler: result
alt result equals False
    SystemHandler -> PatientPage: Show Request Frame
    SystemHandler -> Patient: PriceInfo()
    Patient --> SystemHandler: Price, Text of \nInfo Message
    alt patient is Non VIP
        SystemHandler --> PatientPage : Show Info Message "You are going\n to pay 150 Credits"
    else patient is Bronze VIP
        SystemHandler --> PatientPage : Show Info Message "You are going\n to pay 125 Credits"
    else patient is Silver VIP
        SystemHandler --> PatientPage : Show Info Message "You are going\n to pay 75 Credits"
    else 
        SystemHandler --> PatientPage : Show Info Message "Chat with our  \ndoctors is Free"
    end
    User -> PatientPage : Import Scan
    PatientPage -> SystemHandler: Load file dialog
    SystemHandler --> PatientPage : Show file dialog
    User -> PatientPage : Select a scan
    PatientPage -> SystemHandler: Scan Path
    alt credits greater than \nor equals to price
        SystemHandler -> Patient : predict()
        Patient -> Model: PredictMyScan()
        Model --> Patient: Prediction
        Patient --> SystemHandler: Prediction
    end
    User -> PatientPage: Fill Request
    PatientPage -> SystemHandler: FillRequest()
    alt Empty Symptoms
        SystemHandler --> PatientPage: Show Error Message \n "Symptoms can not be empty"
    end
    alt Empty illnessTime
        SystemHandler --> PatientPage: Show Error Message \n "Illness Time can not be empty"
    end
    alt Empty medications
        SystemHandler --> PatientPage: Show Error Message \n "Medications can not be empty"
    end
    alt Patient not Gold VIP
        SystemHandler -> Patient: updateBalance()
        Patient --> SystemHandler: result
        alt result equals -1
        SystemHandler --> PatientPage: Show Error Message Insufficient Funds
        end
        SystemHandler -> Patient: CreateRequest()
        Patient -> db: Insert Request Data
        Patient --> SystemHandler: Confirm Message
        SystemHandler --> PatientPage:Show Info Message Successfully added
    else
        SystemHandler -> Patient: CreateRequest()
        Patient -> db: Insert Request Data
        Patient --> SystemHandler: Confirm Message
        SystemHandler --> PatientPage:Show Info Message Successfully added
    end

end
@enduml
